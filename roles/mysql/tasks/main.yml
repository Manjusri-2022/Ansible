- name: Configuring {{COMPONENT}} Repository
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/{{COMPONENT}}.repo 

- name: Installing {{COMPONENT}} 
  ansible.builtin.package:
    name: mysql-community-server
    state: present

- name: Starting {{COMPONENT}} 
  ansible.builtin.systemd:
    name: mysqld
    state: started
    enabled: true 

# Rescue and blocks work together ; Tasks in rescue will only be executed if the task in block fails
- name: Validate the default password 
  block: 
    - name: Get MySQL version with non-default credentials
      community.mysql.mysql_info:
        login_user: root
        login_password: RoboShop@1
        filter: version
  rescue:
    - name: Fetch the log file from the rmote note
      ansible.builtin.slurp:
        src: /var/log/mysqld.log
      register: mysql_pwd_log
      
    - name: Grep the password and assign it to a variable
      ansible.builtin.set_fact:
          DEFAULT_PASSWORD: "{{ mysql_pwd_log['content'] | b64decode | regex_findall('.*temporary password.*')| join(' ') |split(' ') | last }}"

    - name: Reset {{COMPONENT}} Default root password
      ansible.builtin.shell:  echo "ALTER USER 'root'@'localhost' IDENTIFIED BY 'RoboShop@1';" | mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD}}"

- name: Configuring Node Name Repo 
  ansible.builtin.shell: set-hostname {{COMPONENT}}-{{ENV}}

- name: Download and extract Mongodb Schema
  ansible.builtin.include_role:
    name: common
    tasks_from: download

- name: Injecting the MongoDB Schema
  community.mongodb.mongodb_shell:
    file: "/tmp/{{COMPONENT}}-main/{{ item }}.js"
    idempotent: yes 
  loop: 
    - catalogue 
    - users
